{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to CPSC-543 Software Maintenance","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Syllabus/","title":"Comprehensive Course Information for CPSC 543 - Software Maintenance (Spring 2025)","text":""},{"location":"Syllabus/#course-overview","title":"Course Overview","text":"<p>This online course, CPSC 543, focuses on software maintenance, crucial for understanding how to build and maintain large-scale software systems. You will learn the theoretical foundations and practical applications, including maintenance metrics. The course emphasizes both preparing software for maintenance and managing maintenance activities.</p>"},{"location":"Syllabus/#instructor-information","title":"Instructor Information","text":"<ul> <li>Instructor: Dr. Song-James Choi, Ph.D.</li> <li>Office: CS427</li> <li>Phone: (657) 278-7257</li> <li>Email: jchoi@fullerton.edu</li> <li>Office Hours: Tuesdays and Thursdays, 5:30 PM - 6:30 PM via Zoom (https://fullerton.zoom.us/j/85605249068)</li> </ul>"},{"location":"Syllabus/#prerequisites","title":"Prerequisites","text":"<ul> <li>CPSC 362 or equivalent work experience.</li> </ul>"},{"location":"Syllabus/#required-and-recommended-textbooks","title":"Required and Recommended Textbooks","text":"<ul> <li>Required: Software Maintenance by Grubb and Takang (2003)</li> <li>Recommended: Practical Software Maintenance by Pigoski (1997)</li> </ul>"},{"location":"Syllabus/#coursework-and-grading-total-100","title":"Coursework and Grading (Total 100%)","text":"<ul> <li>Term Project (35%)<ul> <li>Project Topic Due: March 5th (5%)</li> <li>Project Draft Due: April 16th (5%)</li> <li>Final Version Due: May 14th (25%)</li> </ul> </li> <li>Midterm Exam (15%)<ul> <li>Availability Period: March 15th (Saturday, 9 AM) - March 16th (Sunday, 10 PM)</li> <li>Absolute Deadline: March 16th, 10:00 PM</li> <li>No make-up exam. In emergencies, contact the instructor ASAP to shift weight to the final exam.</li> </ul> </li> <li>Final Exam (30%)<ul> <li>Availability Period: May 10th (Saturday, 9 AM) - May 11th (Sunday, 10 PM)</li> <li>Absolute Deadline: May 11th, 10:00 PM</li> <li>University policy for missed final exams will be followed.</li> </ul> </li> <li>Class Participation (20%)<ul> <li>Chapter Summaries (10%): 2-3 pages per chapter, covering concepts, applications, and your opinions. Submit per module as a single Word or PDF file.</li> <li>Forum Discussions (10%): Minimum of 2 meaningful posts per chapter (28+ total). Discussions should relate to Part 2 of your chapter summaries. No exam question discussions allowed. Forums close with each module\u2019s summary due date.</li> </ul> </li> </ul>"},{"location":"Syllabus/#grading-scale","title":"Grading Scale","text":"<ul> <li>A- or higher: 90%+</li> <li>B- or higher: 80-89%</li> <li>C- or higher: 70-79%</li> <li>D- or higher: 60-69%</li> <li>F: 0-59%</li> </ul>"},{"location":"Syllabus/#important-course-policies-and-notes","title":"Important Course Policies and Notes","text":"<ul> <li>Communication: Regularly check your email and Canvas (daily or 2-3 times a week).</li> <li>Late Submissions: Accepted (except forum posts) with a 20% deduction for the first late day and 1% per additional day. Absolute last submission date is May 14th.</li> <li>Online Course: Entirely online, with all materials on Canvas.</li> <li>Online Activity Tracking: Your engagement online will be monitored.</li> <li>Netiquette: Adhere to the \u201cCore Rules of Netiquette\u201d in the syllabus.</li> <li>Academic Honesty: All work must be original. Academic dishonesty will result in an \u201cF\u201d.</li> <li>ADA Accommodations: Contact Disability Support Services within the first week for accommodations.</li> <li>Emergency Procedures: Review emergency guidelines.</li> <li>Instructor Contact: Contact Dr. Choi for any course-related issues.</li> </ul>"},{"location":"Syllabus/#weekly-schedule-and-tasks","title":"Weekly Schedule and Tasks","text":"<p>Here\u2019s a detailed breakdown of what you should be doing each week. This combines the chapter readings, deadlines, and project milestones:</p>"},{"location":"Syllabus/#module-1-chapters-1-4","title":"Module 1 (Chapters 1-4)","text":"<ul> <li>Week 1 (Jan 21 - Jan 27):<ul> <li>Task: Familiarize yourself with the course structure on Canvas.</li> <li>Task: Begin reading Chapter 1 of Software Maintenance textbook.</li> <li>Action: Optional: Check out recommended textbook Practical Software Maintenance.</li> </ul> </li> <li>Week 2 (Jan 28 \u2013 Feb 3):<ul> <li>Task: Finish reading Chapter 1 and Chapter 2.</li> <li>Task: Start drafting chapter summaries for Chapters 1 and 2.</li> <li>Action: Begin participating in the Module 1 forum discussions.</li> </ul> </li> <li>Week 3 (Feb 4 - Feb 10):<ul> <li>Task: Read Chapter 3.</li> <li>Task: Begin thinking about potential project topics and initial ideas.</li> <li>Task: Continue drafting chapter summaries for Chapters 1-3.</li> <li>Action: Actively participate in Module 1 forum discussions.</li> </ul> </li> <li>Week 4 (Feb 11 \u2013 Feb 17):<ul> <li>Task: Read Chapter 4.</li> <li>Task: Finalize chapter summaries for Chapters 1-4.</li> <li>Task: Participate in Module 1 forum discussions.</li> <li>Deadline: Sunday, Feb 17 - Chapter Summaries for Module 1 due (Chapters 1-4). Module 1 forum closes.</li> </ul> </li> </ul>"},{"location":"Syllabus/#module-2-chapters-5-12-13","title":"Module 2 (Chapters 5, 12 &amp; 13)","text":"<ul> <li>Week 5 (Feb 18 \u2013 Feb 24):<ul> <li>Task: Read Chapter 5.</li> <li>Task: Start drafting chapter summary for Chapter 5.</li> <li>Action: Begin participating in the Module 2 forum discussions.</li> </ul> </li> <li>Week 6 (Feb 25 \u2013 Mar 2):<ul> <li>Task: Read Chapter 12.</li> <li>Task: Draft chapter summaries for Chapter 5 and Chapter 12.</li> <li>Action: Continue Module 2 forum discussions actively.</li> </ul> </li> <li>Week 7 (Mar 3 \u2013 Mar 9):<ul> <li>Task: Read Chapter 13.</li> <li>Task: Finalize chapter summaries for Chapters 5, 12, and 13.</li> <li>Task: Finalize your project topic choice.</li> <li>Action: Participate in Module 2 forum discussions.</li> <li>Deadline: Wednesday, Mar 5 - Project Topic Due.</li> <li>Deadline: Sunday, Mar 9 - Chapter Summaries for Module 2 due (Chapters 5, 12, 13). Module 2 forum closes.</li> </ul> </li> </ul>"},{"location":"Syllabus/#module-3-chapters-6-9","title":"Module 3 (Chapters 6 - 9)","text":"<ul> <li>Week 8 (Mar 10 \u2013 Mar 16):<ul> <li>Task: Read Chapter 6.</li> <li>Task: Begin preparing for the Midterm Exam (Chapters 1-5, 12, 13).</li> <li>Task: Start drafting chapter summary for Chapter 6.</li> <li>Midterm Exam: Saturday, Mar 15 (9 AM) - Sunday, Mar 16 (10 PM). Absolute Deadline: Sunday, Mar 16, 10 PM.</li> </ul> </li> <li>Week 9 (Mar 17 \u2013 Mar 23):<ul> <li>Task: Read Chapter 7.</li> <li>Task: Draft chapter summary for Chapter 7.</li> <li>Action: Rest after the midterm, but stay on track with readings.</li> </ul> </li> <li>Week 10 (Mar 24 \u2013 Mar 30):<ul> <li>Task: Read Chapter 8.</li> <li>Task: Draft chapter summary for Chapter 8.</li> <li>Action: Continue working on project planning.</li> </ul> </li> <li>Week of Mar 31 \u2013 Apr 6: Spring Recess - No classes or office hours.<ul> <li>Enjoy your break!</li> </ul> </li> <li>Week 11 (Apr 7 \u2013 Apr 13):<ul> <li>Task: Read Chapter 9.</li> <li>Task: Finalize chapter summaries for Chapters 6-9.</li> <li>Task: Complete a draft version of your term project.</li> <li>Action: Participate in Module 3 forum discussions.</li> <li>Deadline: Sunday, Apr 13 - Chapter Summaries for Module 3 due (Chapters 6-9). Module 3 forum closes.</li> </ul> </li> </ul>"},{"location":"Syllabus/#module-4-chapters-10-11-14-and-project","title":"Module 4 (Chapters 10, 11 &amp; 14 and Project)","text":"<ul> <li>Week 12 (Apr 14 \u2013 Apr 20):<ul> <li>Task: Read Chapter 10.</li> <li>Task: Draft chapter summary for Chapter 10.</li> <li>Task: Submit Project Draft.</li> <li>Deadline: Wednesday, Apr 16 - Project Draft Due.</li> </ul> </li> <li>Week 13 (Apr 21 \u2013 Apr 27):<ul> <li>Task: Read Chapter 11.</li> <li>Task: Draft chapter summary for Chapter 11.</li> <li>Action: Work on project revisions based on feedback.</li> </ul> </li> <li>Week 14 (Apr 28 \u2013 May 4):<ul> <li>Task: Read Chapter 14.</li> <li>Task: Finalize chapter summaries for Chapters 10, 11, and 14.</li> <li>Action: Finalize your project.</li> <li>Deadline: Sunday, May 4 - Chapter Summaries for Module 4 due (Chapters 10, 11, 14). Module 4 forum closes.</li> </ul> </li> <li>Week 15 (May 5 \u2013 May 11):<ul> <li>Task: Finalize your term project.</li> <li>Task: Prepare for the Final Exam (Comprehensive).</li> <li>Final Exam: Saturday, May 10 (9 AM) - Sunday, May 11 (10 PM). Absolute Deadline: Sunday, May 11, 10 PM.</li> </ul> </li> <li>Week 16 (May 12 \u2013 May 18):<ul> <li>Deadline: Wednesday, May 14 - Project Final Version Due. Absolute Last Day for Late Submissions.</li> </ul> </li> </ul>"},{"location":"Syllabus/#comprehensive-gantt-chart","title":"Comprehensive Gantt Chart","text":"<p>Here is a detailed Gantt chart for the entire course, summarizing all tasks and deadlines:</p> <pre><code>---\nconfig:\n  layout: elk\n  look: handDrawn\n  theme: dark\n---\ngantt\n    title CPSC 543: Software Maintenance - Spring 2025 Comprehensive Timeline\n    dateFormat  YYYY-MM-DD\n    axisFormat %m/%d\n\n    section Module 1 (Jan 21 - Feb 17)\n    Course Familiarization             : 2025-01-21, 1w\n    Chapter 1 &amp; 2 Reading &amp; Summaries : 2025-01-28, 2w\n    Chapter 3 &amp; Project Topic Ideas   : 2025-02-04, 1w\n    Chapter 4 Reading &amp; Summaries     : 2025-02-11, 1w\n    Module 1 Forum Participation      : 2025-01-21, 2025-02-17\n    Chapter Summaries Module 1 Due    : 2025-02-17, 0d\n\n    section Module 2 (Feb 18 - Mar 9)\n    Chapter 5 Reading &amp; Summaries     : 2025-02-18, 1w\n    Chapter 12 Reading &amp; Summaries    : 2025-02-25, 1w\n    Chapter 13 &amp; Project Topic Finalize: 2025-03-03, 1w\n    Module 2 Forum Participation      : 2025-02-18, 2025-03-09\n    Project Topic Due                 : 2025-03-05, 0d\n    Chapter Summaries Module 2 Due    : 2025-03-09, 0d\n\n    section Module 3 (Mar 10 - Apr 13)\n    Chapter 6 &amp; Midterm Prep        : 2025-03-10, 1w\n    Midterm Exam                    : 2025-03-15, 2d\n    Chapter 7 Reading &amp; Summaries     : 2025-03-17, 1w\n    Chapter 8 Reading &amp; Summaries     : 2025-03-24, 1w\n    Spring Recess                     : 2025-03-31, 1w\n    Chapter 9 &amp; Project Draft Prep  : 2025-04-07, 1w\n    Module 3 Forum Participation      : 2025-03-10, 2025-04-13\n    Chapter Summaries Module 3 Due    : 2025-04-13, 0d\n\n\n    section Module 4 (Apr 14 - May 14)\n    Chapter 10 Reading &amp; Summaries    : 2025-04-14, 1w\n    Project Draft Due                 : 2025-04-16, 0d\n    Chapter 11 Reading &amp; Summaries    : 2025-04-21, 1w\n    Chapter 14 Reading &amp; Summaries    : 2025-04-28, 1w\n    Module 4 Forum Participation      : 2025-04-14, 2025-05-04\n    Chapter Summaries Module 4 Due    : 2025-05-04, 0d\n    Final Project Finalization        : 2025-05-05, 1w\n    Final Exam                        : 2025-05-10, 2d\n    Project Final Version Due         : 2025-05-14, 0d\n</code></pre>"},{"location":"Chapter_1/Chapter_1/","title":"Textbook","text":""},{"location":"Chapter_1/Chapter_1/#chapter-1-introduction-to-basic-concepts","title":"Chapter 1 - Introduction to Basic Concepts","text":"<pre><code>---\nconfig:\n  layout: elk\n  look: handDrawn\n  theme: dark\n---\nmindmap\n  root((Chapter 1: Introduction to Basic Concepts))\n    node(1.1 Introduction)\n      label(Software Maintenance defined)\n      label(Discipline after delivery)\n      label(High Costs: 40-70% lifecycle)\n      label(Urgent need for solutions)\n      label(Proliferation of Software Systems)\n      label(Importance of System Usefulness)\n      label(Life &amp; Death Context)\n      label(Challenges of Change Management)\n    node(1.2 Definitions)\n      node(Evolution)\n        label(Continuous change)\n        label(Simpler to Complex)\n        label(Worse to Better)\n      node(Maintainability)\n        label(Ease of Maintenance)\n      node(Maintenance)\n        label(Keeping Existing State)\n        label(Repair, Efficiency, Validity)\n        label(Preserve from Failure/Decline)\n      node(Software)\n        label(Programs)\n        label(Documentation)\n        label(Operating Procedures)\n        label(Computers Useful to Man)\n      node(Software Maintenance)\n        label(Modification after Delivery)\n        label(Correct Faults)\n        label(Improve Performance)\n        label(Adapt to Modified Environment)\n    node(1.3 The Basics of \"Software\")\n      label(Software != Programs alone)\n      label(Comprehensive View)\n        label(Programs: Source &amp; Object Code)\n        label(Documentation: Analysis, Design, User Manuals)\n        label(Operating Procedures: Setup, Failure Response)\n      node(Maintainability - Difficult to Quantify)\n        label(Complexity Measures Exist)\n        label(Interoperability, Standards are factors)\n        label(No Simple 'Maintainability Factor')\n        label(Recognizing Maintainability Traits is Key Skill)\n        label(Maintainer Worth = Weight in Gold)\n        label(Maintainers becoming \"Elite\")\n    node(1.4 New Development vs Maintenance)\n      label(Maintenance - Constraints of Existing System)\n      label(New Development - Green Field Site)\n      label(Impact Analysis - Before ANY work)\n      node(Difference in Enhancement Design)\n        label(Maintenance - Investigate Current System)\n          label(\"Architectural Design\")\n          label(\"Low-Level Design\")\n        label(Designer Needs to:)\n          label(\"Accommodate Change\")\n          label(\"Predict Ripple Effect\")\n          label(\"Determine Skills Required\")\n      node(Jones Analogy - Room Addition)\n        label(\"Do not weaken existing structure\")\n        label(\"Cost per sq ft higher in maintenance\")\n        label(\"Remove walls, reroute circuits, avoid disruption\")\n    node(1.5 Why Software Maintenance is Needed)\n      label(Continuity of Service)\n        label(\"Keep Running\")\n        label(\"Life-Threatening Failures Possible\")\n        label(\"Daily Life Managed by Computers\")\n      label(Mandatory Upgrades)\n        label(\"Government Regulations\")\n        label(\"Tax Laws Change\")\n        label(\"Competitive Edge\")\n      label(User Requests for Improvements)\n        label(\"Better System = More Use\")\n        label(\"Functionality Enhancements\")\n        label(\"Performance Improvements\")\n        label(\"Customization\")\n      label(Facilitate Future Maintenance)\n        label(\"Shortcuts Costly Long-Term\")\n        label(\"Code &amp; Database Restructuring\")\n        label(\"Documentation Updates\")\n      label(\"System is Never Finished if Used\")\n    node(1.6 Maintaining Systems Effectively)\n      label(Good Grounding in Theory &amp; Skills Essential)\n      label(Key Discipline for System Operation)\n      label(Far-Reaching Maintenance Activities)\n      label(Wider Skillset needed)\n        label(\"Beyond Programming\")\n        label(\"Comprehension Skills\")\n        label(\"Analytical Powers\")\n    node(1.7 Case Study - Air Traffic Control)\n      label(\"UK New System Delays &lt;br&gt; (1990-2002)\")\n      label(Old System Over Capacity)\n      label(Initial Decision - Brand New Bespoke System)\n      label(Delays, Bugs, Cost Overruns)\n      label(Off-the-shelf components suggested)\n      label(Safety Compromised by Delays)\n      label(Less Ambitious European Upgrades - More Success)\n    node(1.8 Categorizing Software Change)\n      label(Motivation for Change)\n      label(Understanding When/How to Change)\n      label(Resource Assignment)\n      label(Prioritizing Change Requests)\n      node(Categories of Change)\n        label(\"Modification by Defects\")\n        label(\"Environmental Modifications \")\n        label(\"Expanded Requirements\")\n        label(\"Prevent Malfunctions\")\n    node(1.9 Summary)\n      label(\"Maintenance Costs 40-70% Life-cycle\")\n      label(Understand Basic Terms: Software, Maintenance, Evolution)\n      label(Maintenance != Development - Key Differences)\n      label(Software Maintenance - Increasing Importance)\n      label(Theoretical Base Underpins Maintenance)\n      label(Next Chapter: Maintenance Framework)\n\n%% style root fill:#f0f,stroke:#333,stroke-width:1px\n</code></pre> <p>Diagram 1: Chapter 1 - Introduction to Basic Concepts - Mindmap</p> <p>This mindmap provides a comprehensive overview of Chapter 1, breaking down each section (<code>1.x</code>) into its main points. It highlights the definitions, key comparisons (Development vs. Maintenance), reasons for maintenance, and the case study, all within a hierarchical structure typical of a mindmap.</p>"}]}